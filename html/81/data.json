{"title":"从0开始学架构","author":"李运华","cover":"https://static001.geekbang.org/resource/image/c2/91/c2f8819b812fe81289f5f1006e93b491.png","cid":81,"list":[{"id":6354,"title":"开篇词 | 照着做，你也能成为架构师！","chapter":"359"},{"id":6458,"title":"01 | 架构到底是指什么？","chapter":"360"},{"id":6463,"title":"02 | 架构设计的历史背景","chapter":"360"},{"id":6472,"title":"03 | 架构设计的目的","chapter":"360"},{"id":6605,"title":"04 | 复杂度来源：高性能","chapter":"360"},{"id":6895,"title":"05 | 复杂度来源：高可用","chapter":"360"},{"id":6899,"title":"06 | 复杂度来源：可扩展性","chapter":"360"},{"id":6990,"title":"07 | 复杂度来源：低成本、安全、规模","chapter":"360"},{"id":7071,"title":"08 | 架构设计三原则","chapter":"360"},{"id":7392,"title":"09 | 架构设计原则案例","chapter":"360"},{"id":7563,"title":"10 | 架构设计流程：识别复杂度","chapter":"360"},{"id":7800,"title":"11 | 架构设计流程：设计备选方案","chapter":"360"},{"id":7832,"title":"12 | 架构设计流程：评估和选择备选方案","chapter":"360"},{"id":7885,"title":"13 | 架构设计流程：详细方案设计","chapter":"360"},{"id":8269,"title":"14 | 高性能数据库集群：读写分离","chapter":"361"},{"id":8373,"title":"15 | 高性能数据库集群：分库分表","chapter":"361"},{"id":8377,"title":"16 | 高性能NoSQL","chapter":"361"},{"id":8640,"title":"17 | 高性能缓存架构","chapter":"361"},{"id":8697,"title":"18 | 单服务器高性能模式：PPC与TPC","chapter":"361"},{"id":8805,"title":"19 | 单服务器高性能模式：Reactor与Proactor","chapter":"361"},{"id":8942,"title":"20 | 高性能负载均衡：分类及架构","chapter":"361"},{"id":9055,"title":"21 | 高性能负载均衡：算法","chapter":"361"},{"id":9302,"title":"22 | 想成为架构师，你必须知道CAP理论","chapter":"362"},{"id":9390,"title":"23 | 想成为架构师，你必须掌握的CAP细节","chapter":"362"},{"id":9391,"title":"24 | FMEA方法，排除架构可用性隐患的利器","chapter":"362"},{"id":9399,"title":"25 | 高可用存储架构：双机架构","chapter":"362"},{"id":9766,"title":"26 | 高可用存储架构：集群和分区","chapter":"362"},{"id":9785,"title":"27 | 如何设计计算高可用架构？","chapter":"362"},{"id":9787,"title":"28 | 业务高可用的保障：异地多活架构","chapter":"362"},{"id":10199,"title":"29 | 异地多活设计4大技巧","chapter":"362"},{"id":10204,"title":"30 | 异地多活设计4步走","chapter":"362"},{"id":10312,"title":"31 | 如何应对接口级的故障？","chapter":"362"},{"id":10688,"title":"32 | 可扩展架构的基本思想和模式","chapter":"363"},{"id":10790,"title":"33 | 传统的可扩展架构模式：分层架构和SOA","chapter":"363"},{"id":10944,"title":"34 | 深入理解微服务架构：银弹 or 焦油坑？","chapter":"363"},{"id":11207,"title":"35 | 微服务架构最佳实践 - 方法篇","chapter":"363"},{"id":11300,"title":"36 | 微服务架构最佳实践 - 基础设施篇","chapter":"363"},{"id":11610,"title":"37 | 微内核架构详解","chapter":"363"},{"id":11760,"title":"38 | 架构师应该如何判断技术演进的方向？","chapter":"364"},{"id":11769,"title":"39 | 互联网技术演进的模式","chapter":"364"},{"id":11947,"title":"40 | 互联网架构模板：“存储层”技术","chapter":"364"},{"id":12299,"title":"41 | 互联网架构模板：“开发层”和“服务层”技术","chapter":"364"},{"id":12408,"title":"42 | 互联网架构模板：“网络层”技术","chapter":"364"},{"id":12572,"title":"43 | 互联网架构模板：“用户层”和“业务层”技术","chapter":"364"},{"id":12801,"title":"44 | 互联网架构模板：“平台”技术","chapter":"364"},{"id":12953,"title":"45 | 架构重构内功心法第一式：有的放矢","chapter":"364"},{"id":13007,"title":"46 | 架构重构内功心法第二式：合纵连横","chapter":"364"},{"id":13040,"title":"47 | 架构重构内功心法第三式：运筹帷幄","chapter":"364"},{"id":13043,"title":"48 | 再谈开源项目：如何选择、使用以及二次开发？","chapter":"364"},{"id":13411,"title":"49 | 谈谈App架构的演进","chapter":"364"},{"id":13419,"title":"50 | 架构实战：架构设计文档模板","chapter":"364"},{"id":7647,"title":"架构专栏特别放送 | “华仔，放学别走！”第1期","chapter":"365"},{"id":8496,"title":"架构专栏特别放送 | “华仔，放学别走！” 第2期","chapter":"365"},{"id":10022,"title":"如何高效地学习开源项目 | “华仔，放学别走！” 第3期","chapter":"365"},{"id":13911,"title":"架构师成长之路 | “华仔，放学别走！” 第4期","chapter":"365"},{"id":29421,"title":"架构师必读书单 | “华仔，放学别走！” 第5期","chapter":"365"},{"id":40573,"title":"新书首发 | 《从零开始学架构》","chapter":"365"},{"id":41397,"title":"致「从0开始学架构」专栏订阅用户","chapter":"365"},{"id":313724,"title":"第二季回归 | 照着做，你也能顺利晋升！","chapter":"365"},{"id":316150,"title":"加餐｜单服务器高性能模式性能对比","chapter":"365"},{"id":326375,"title":"加餐｜扒一扒中台皇帝的外衣","chapter":"365"},{"id":334919,"title":"加餐｜业务架构实战营开营了","chapter":"365"},{"id":14124,"title":"结束语 | 坚持，成就你的技术梦想","chapter":"366"},{"id":215790,"title":"结课测试｜这些架构技能你都掌握了吗？","chapter":"1310"}]}