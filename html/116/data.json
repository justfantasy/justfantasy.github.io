{"title":"深入剖析Kubernetes","author":"张磊","cover":"https://static001.geekbang.org/resource/image/1b/ba/1b55645096bc6d40623601e33f87bcba.jpg","cid":116,"list":[{"id":14252,"title":"开篇词 | 打通“容器技术”的任督二脉","chapter":"478"},{"id":14254,"title":"01 | 预习篇 · 小鲸鱼大事记（一）：初出茅庐","chapter":"478"},{"id":14256,"title":"02 | 预习篇 · 小鲸鱼大事记（二）：崭露头角","chapter":"478"},{"id":14405,"title":"03 | 预习篇 · 小鲸鱼大事记（三）：群雄并起","chapter":"478"},{"id":14406,"title":"04 | 预习篇 · 小鲸鱼大事记（四）：尘埃落定","chapter":"478"},{"id":14642,"title":"05 | 白话容器基础（一）：从进程说开去","chapter":"480"},{"id":14653,"title":"06 | 白话容器基础（二）：隔离与限制","chapter":"480"},{"id":17921,"title":"07 | 白话容器基础（三）：深入理解容器镜像","chapter":"480"},{"id":18119,"title":"08 | 白话容器基础（四）：重新认识Docker容器","chapter":"480"},{"id":23132,"title":"09 | 从容器到容器云：谈谈Kubernetes的本质","chapter":"480"},{"id":39712,"title":"10 | Kubernetes一键部署利器：kubeadm","chapter":"481"},{"id":39724,"title":"11 | 从0到1：搭建一个完整的Kubernetes集群","chapter":"481"},{"id":40008,"title":"12 | 牛刀小试：我的第一个容器化应用","chapter":"481"},{"id":40092,"title":"13 | 为什么我们需要Pod？","chapter":"482"},{"id":40366,"title":"14 | 深入解析Pod对象（一）：基本概念","chapter":"482"},{"id":40466,"title":"15 | 深入解析Pod对象（二）：使用进阶","chapter":"482"},{"id":40583,"title":"16 | 编排其实很简单：谈谈“控制器”模型","chapter":"482"},{"id":40906,"title":"17 | 经典PaaS的记忆：作业副本与水平扩展","chapter":"482"},{"id":41017,"title":"18 | 深入理解StatefulSet（一）：拓扑状态","chapter":"482"},{"id":41154,"title":"19 | 深入理解StatefulSet（二）：存储状态","chapter":"482"},{"id":41217,"title":"20 | 深入理解StatefulSet（三）：有状态应用实践","chapter":"482"},{"id":41366,"title":"21 | 容器化守护进程的意义：DaemonSet","chapter":"482"},{"id":41607,"title":"22 | 撬动离线业务：Job与CronJob","chapter":"482"},{"id":41769,"title":"23 | 声明式API与Kubernetes编程范式","chapter":"482"},{"id":41876,"title":"24 | 深入解析声明式API（一）：API对象的奥秘","chapter":"482"},{"id":42076,"title":"25 | 深入解析声明式API（二）：编写自定义控制器","chapter":"482"},{"id":42154,"title":"26 | 基于角色的权限控制：RBAC","chapter":"482"},{"id":42493,"title":"27 | 聪明的微创新：Operator工作原理解读","chapter":"482"},{"id":42698,"title":"28 | PV、PVC、StorageClass，这些到底在说啥？","chapter":"483"},{"id":42819,"title":"29 | PV、PVC体系是不是多此一举？从本地持久化卷谈起","chapter":"483"},{"id":44245,"title":"30 | 编写自己的存储插件：FlexVolume与CSI","chapter":"483"},{"id":64392,"title":"31 | 容器存储实践：CSI插件编写指南","chapter":"483"},{"id":64948,"title":"32 | 浅谈容器网络","chapter":"484"},{"id":65287,"title":"33 | 深入解析容器跨主机网络","chapter":"484"},{"id":67351,"title":"34 | Kubernetes网络模型与CNI网络插件","chapter":"484"},{"id":67775,"title":"35 | 解读Kubernetes三层网络方案","chapter":"484"},{"id":68316,"title":"36 | 为什么说Kubernetes只有soft multi-tenancy？","chapter":"484"},{"id":68636,"title":"37 | 找到容器不容易：Service、DNS与服务发现","chapter":"484"},{"id":68964,"title":"38 | 从外界连通Service与Service调试“三板斧”","chapter":"484"},{"id":69214,"title":"39 | 谈谈Service与Ingress","chapter":"484"},{"id":69678,"title":"40 | Kubernetes的资源模型与资源管理","chapter":"485"},{"id":69890,"title":"41 | 十字路口上的Kubernetes默认调度器","chapter":"485"},{"id":70211,"title":"42 | Kubernetes默认调度器调度策略解析","chapter":"485"},{"id":70519,"title":"43 | Kubernetes默认调度器的优先级与抢占机制","chapter":"485"},{"id":70876,"title":"44 | Kubernetes GPU管理与Device Plugin机制","chapter":"485"},{"id":71056,"title":"45 | 幕后英雄：SIG-Node与CRI","chapter":"486"},{"id":71499,"title":"46 | 解读 CRI 与 容器运行时","chapter":"486"},{"id":71606,"title":"47 | 绝不仅仅是安全：Kata Containers 与 gVisor","chapter":"486"},{"id":72281,"title":"48 | Prometheus、Metrics Server与Kubernetes监控体系","chapter":"487"},{"id":72693,"title":"49 | Custom Metrics: 让Auto Scaling不再“食之无味”","chapter":"487"},{"id":73156,"title":"50 | 让日志无处可逃：容器日志收集与管理","chapter":"487"},{"id":73477,"title":"51 | 谈谈Kubernetes开源社区和未来走向","chapter":"488"},{"id":73790,"title":"52 | 答疑：在问题中解决问题，在思考中产生思考","chapter":"489"},{"id":83596,"title":"特别放送 | 2019 年，容器技术生态会发生些什么？","chapter":"490"},{"id":114197,"title":"特别放送 | 基于 Kubernetes 的云原生应用管理，到底应该怎么做？","chapter":"490"},{"id":74278,"title":"结束语 | Kubernetes：赢开发者赢天下","chapter":"491"},{"id":224358,"title":"结课测试｜这些Kubernetes的相关知识，你都掌握了吗？","chapter":"1343"},{"id":14252,"title":"开篇词 | 打通“容器技术”的任督二脉","chapter":"478"},{"id":14254,"title":"01 | 预习篇 · 小鲸鱼大事记（一）：初出茅庐","chapter":"478"},{"id":14256,"title":"02 | 预习篇 · 小鲸鱼大事记（二）：崭露头角","chapter":"478"},{"id":14405,"title":"03 | 预习篇 · 小鲸鱼大事记（三）：群雄并起","chapter":"478"},{"id":14406,"title":"04 | 预习篇 · 小鲸鱼大事记（四）：尘埃落定","chapter":"478"},{"id":14642,"title":"05 | 白话容器基础（一）：从进程说开去","chapter":"480"},{"id":14653,"title":"06 | 白话容器基础（二）：隔离与限制","chapter":"480"},{"id":17921,"title":"07 | 白话容器基础（三）：深入理解容器镜像","chapter":"480"},{"id":18119,"title":"08 | 白话容器基础（四）：重新认识Docker容器","chapter":"480"},{"id":23132,"title":"09 | 从容器到容器云：谈谈Kubernetes的本质","chapter":"480"},{"id":39712,"title":"10 | Kubernetes一键部署利器：kubeadm","chapter":"481"},{"id":39724,"title":"11 | 从0到1：搭建一个完整的Kubernetes集群","chapter":"481"},{"id":40008,"title":"12 | 牛刀小试：我的第一个容器化应用","chapter":"481"},{"id":40092,"title":"13 | 为什么我们需要Pod？","chapter":"482"},{"id":40366,"title":"14 | 深入解析Pod对象（一）：基本概念","chapter":"482"},{"id":40466,"title":"15 | 深入解析Pod对象（二）：使用进阶","chapter":"482"},{"id":40583,"title":"16 | 编排其实很简单：谈谈“控制器”模型","chapter":"482"},{"id":40906,"title":"17 | 经典PaaS的记忆：作业副本与水平扩展","chapter":"482"},{"id":41017,"title":"18 | 深入理解StatefulSet（一）：拓扑状态","chapter":"482"},{"id":41154,"title":"19 | 深入理解StatefulSet（二）：存储状态","chapter":"482"},{"id":41217,"title":"20 | 深入理解StatefulSet（三）：有状态应用实践","chapter":"482"},{"id":41366,"title":"21 | 容器化守护进程的意义：DaemonSet","chapter":"482"},{"id":41607,"title":"22 | 撬动离线业务：Job与CronJob","chapter":"482"},{"id":41769,"title":"23 | 声明式API与Kubernetes编程范式","chapter":"482"},{"id":41876,"title":"24 | 深入解析声明式API（一）：API对象的奥秘","chapter":"482"},{"id":42076,"title":"25 | 深入解析声明式API（二）：编写自定义控制器","chapter":"482"},{"id":42154,"title":"26 | 基于角色的权限控制：RBAC","chapter":"482"},{"id":42493,"title":"27 | 聪明的微创新：Operator工作原理解读","chapter":"482"},{"id":42698,"title":"28 | PV、PVC、StorageClass，这些到底在说啥？","chapter":"483"},{"id":42819,"title":"29 | PV、PVC体系是不是多此一举？从本地持久化卷谈起","chapter":"483"},{"id":44245,"title":"30 | 编写自己的存储插件：FlexVolume与CSI","chapter":"483"},{"id":64392,"title":"31 | 容器存储实践：CSI插件编写指南","chapter":"483"},{"id":64948,"title":"32 | 浅谈容器网络","chapter":"484"},{"id":65287,"title":"33 | 深入解析容器跨主机网络","chapter":"484"},{"id":67351,"title":"34 | Kubernetes网络模型与CNI网络插件","chapter":"484"},{"id":67775,"title":"35 | 解读Kubernetes三层网络方案","chapter":"484"},{"id":68316,"title":"36 | 为什么说Kubernetes只有soft multi-tenancy？","chapter":"484"},{"id":68636,"title":"37 | 找到容器不容易：Service、DNS与服务发现","chapter":"484"},{"id":68964,"title":"38 | 从外界连通Service与Service调试“三板斧”","chapter":"484"},{"id":69214,"title":"39 | 谈谈Service与Ingress","chapter":"484"},{"id":69678,"title":"40 | Kubernetes的资源模型与资源管理","chapter":"485"},{"id":69890,"title":"41 | 十字路口上的Kubernetes默认调度器","chapter":"485"},{"id":70211,"title":"42 | Kubernetes默认调度器调度策略解析","chapter":"485"},{"id":70519,"title":"43 | Kubernetes默认调度器的优先级与抢占机制","chapter":"485"},{"id":70876,"title":"44 | Kubernetes GPU管理与Device Plugin机制","chapter":"485"},{"id":71056,"title":"45 | 幕后英雄：SIG-Node与CRI","chapter":"486"},{"id":71499,"title":"46 | 解读 CRI 与 容器运行时","chapter":"486"},{"id":71606,"title":"47 | 绝不仅仅是安全：Kata Containers 与 gVisor","chapter":"486"},{"id":72281,"title":"48 | Prometheus、Metrics Server与Kubernetes监控体系","chapter":"487"},{"id":72693,"title":"49 | Custom Metrics: 让Auto Scaling不再“食之无味”","chapter":"487"},{"id":73156,"title":"50 | 让日志无处可逃：容器日志收集与管理","chapter":"487"},{"id":73477,"title":"51 | 谈谈Kubernetes开源社区和未来走向","chapter":"488"},{"id":73790,"title":"52 | 答疑：在问题中解决问题，在思考中产生思考","chapter":"489"},{"id":83596,"title":"特别放送 | 2019 年，容器技术生态会发生些什么？","chapter":"490"},{"id":114197,"title":"特别放送 | 基于 Kubernetes 的云原生应用管理，到底应该怎么做？","chapter":"490"},{"id":74278,"title":"结束语 | Kubernetes：赢开发者赢天下","chapter":"491"},{"id":224358,"title":"结课测试｜这些Kubernetes的相关知识，你都掌握了吗？","chapter":"1343"},{"id":14252,"title":"开篇词 | 打通“容器技术”的任督二脉","chapter":"478"},{"id":14254,"title":"01 | 预习篇 · 小鲸鱼大事记（一）：初出茅庐","chapter":"478"},{"id":14256,"title":"02 | 预习篇 · 小鲸鱼大事记（二）：崭露头角","chapter":"478"},{"id":14405,"title":"03 | 预习篇 · 小鲸鱼大事记（三）：群雄并起","chapter":"478"},{"id":14406,"title":"04 | 预习篇 · 小鲸鱼大事记（四）：尘埃落定","chapter":"478"},{"id":14642,"title":"05 | 白话容器基础（一）：从进程说开去","chapter":"480"},{"id":14653,"title":"06 | 白话容器基础（二）：隔离与限制","chapter":"480"},{"id":17921,"title":"07 | 白话容器基础（三）：深入理解容器镜像","chapter":"480"},{"id":18119,"title":"08 | 白话容器基础（四）：重新认识Docker容器","chapter":"480"},{"id":23132,"title":"09 | 从容器到容器云：谈谈Kubernetes的本质","chapter":"480"},{"id":39712,"title":"10 | Kubernetes一键部署利器：kubeadm","chapter":"481"},{"id":39724,"title":"11 | 从0到1：搭建一个完整的Kubernetes集群","chapter":"481"},{"id":40008,"title":"12 | 牛刀小试：我的第一个容器化应用","chapter":"481"},{"id":40092,"title":"13 | 为什么我们需要Pod？","chapter":"482"},{"id":40366,"title":"14 | 深入解析Pod对象（一）：基本概念","chapter":"482"},{"id":40466,"title":"15 | 深入解析Pod对象（二）：使用进阶","chapter":"482"},{"id":40583,"title":"16 | 编排其实很简单：谈谈“控制器”模型","chapter":"482"},{"id":40906,"title":"17 | 经典PaaS的记忆：作业副本与水平扩展","chapter":"482"},{"id":41017,"title":"18 | 深入理解StatefulSet（一）：拓扑状态","chapter":"482"},{"id":41154,"title":"19 | 深入理解StatefulSet（二）：存储状态","chapter":"482"},{"id":41217,"title":"20 | 深入理解StatefulSet（三）：有状态应用实践","chapter":"482"},{"id":41366,"title":"21 | 容器化守护进程的意义：DaemonSet","chapter":"482"},{"id":41607,"title":"22 | 撬动离线业务：Job与CronJob","chapter":"482"},{"id":41769,"title":"23 | 声明式API与Kubernetes编程范式","chapter":"482"},{"id":41876,"title":"24 | 深入解析声明式API（一）：API对象的奥秘","chapter":"482"},{"id":42076,"title":"25 | 深入解析声明式API（二）：编写自定义控制器","chapter":"482"},{"id":42154,"title":"26 | 基于角色的权限控制：RBAC","chapter":"482"},{"id":42493,"title":"27 | 聪明的微创新：Operator工作原理解读","chapter":"482"},{"id":42698,"title":"28 | PV、PVC、StorageClass，这些到底在说啥？","chapter":"483"},{"id":42819,"title":"29 | PV、PVC体系是不是多此一举？从本地持久化卷谈起","chapter":"483"},{"id":44245,"title":"30 | 编写自己的存储插件：FlexVolume与CSI","chapter":"483"},{"id":64392,"title":"31 | 容器存储实践：CSI插件编写指南","chapter":"483"},{"id":64948,"title":"32 | 浅谈容器网络","chapter":"484"},{"id":65287,"title":"33 | 深入解析容器跨主机网络","chapter":"484"},{"id":67351,"title":"34 | Kubernetes网络模型与CNI网络插件","chapter":"484"},{"id":67775,"title":"35 | 解读Kubernetes三层网络方案","chapter":"484"},{"id":68316,"title":"36 | 为什么说Kubernetes只有soft multi-tenancy？","chapter":"484"},{"id":68636,"title":"37 | 找到容器不容易：Service、DNS与服务发现","chapter":"484"},{"id":68964,"title":"38 | 从外界连通Service与Service调试“三板斧”","chapter":"484"},{"id":69214,"title":"39 | 谈谈Service与Ingress","chapter":"484"},{"id":69678,"title":"40 | Kubernetes的资源模型与资源管理","chapter":"485"},{"id":69890,"title":"41 | 十字路口上的Kubernetes默认调度器","chapter":"485"},{"id":70211,"title":"42 | Kubernetes默认调度器调度策略解析","chapter":"485"},{"id":70519,"title":"43 | Kubernetes默认调度器的优先级与抢占机制","chapter":"485"},{"id":70876,"title":"44 | Kubernetes GPU管理与Device Plugin机制","chapter":"485"},{"id":71056,"title":"45 | 幕后英雄：SIG-Node与CRI","chapter":"486"},{"id":71499,"title":"46 | 解读 CRI 与 容器运行时","chapter":"486"},{"id":71606,"title":"47 | 绝不仅仅是安全：Kata Containers 与 gVisor","chapter":"486"},{"id":72281,"title":"48 | Prometheus、Metrics Server与Kubernetes监控体系","chapter":"487"},{"id":72693,"title":"49 | Custom Metrics: 让Auto Scaling不再“食之无味”","chapter":"487"},{"id":73156,"title":"50 | 让日志无处可逃：容器日志收集与管理","chapter":"487"},{"id":73477,"title":"51 | 谈谈Kubernetes开源社区和未来走向","chapter":"488"},{"id":73790,"title":"52 | 答疑：在问题中解决问题，在思考中产生思考","chapter":"489"},{"id":83596,"title":"特别放送 | 2019 年，容器技术生态会发生些什么？","chapter":"490"},{"id":114197,"title":"特别放送 | 基于 Kubernetes 的云原生应用管理，到底应该怎么做？","chapter":"490"},{"id":74278,"title":"结束语 | Kubernetes：赢开发者赢天下","chapter":"491"},{"id":224358,"title":"结课测试｜这些Kubernetes的相关知识，你都掌握了吗？","chapter":"1343"}]}