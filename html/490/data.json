{"title":"徐昊 · TDD项目实战70讲","author":"徐昊","cover":"https://static001.geekbang.org/resource/image/a4/d2/a4336c04618e740e60d1b03b806de8d2.png","cid":490,"list":[{"id":494571,"title":"开篇词｜为什么TDD是当前最具工程效能的研发流程？","chapter":"2565"},{"id":495506,"title":"课前必读｜20年前的“老古董”技术，为什么还值得开个课？","chapter":"2565"},{"id":494207,"title":"01｜TDD演示（1）：任务分解法与整体工作流程","chapter":"2566"},{"id":494212,"title":"02｜TDD演示（2）：识别坏味道与代码重构","chapter":"2566"},{"id":494597,"title":"03｜TDD演示（3）：按测试策略重组测试","chapter":"2566"},{"id":494604,"title":"04｜TDD演示（4）：实现对于列表参数的支持","chapter":"2566"},{"id":496697,"title":"05｜TDD中的测试（1）：状态验证为什么是主要的使用方式？","chapter":"2566"},{"id":496698,"title":"06｜TDD中的测试（2）：行为验证为什么应该尽量避免使用？","chapter":"2566"},{"id":496699,"title":"07｜TDD中的测试（3）：集成测试还是单元测试？","chapter":"2566"},{"id":496700,"title":"08｜TDD中的驱动（1）：驱动的极限是什么？","chapter":"2566"},{"id":496701,"title":"09｜TDD中的驱动（2）：重构发挥了什么作用？","chapter":"2566"},{"id":496702,"title":"10｜TDD中的驱动（3）：何为经典学派？何为伦敦学派？","chapter":"2566"},{"id":496703,"title":"11｜作为工程化方法的TDD：更低的成本与更高的效能","chapter":"2566"},{"id":503219,"title":"代码评点01｜不同语言TDD的节奏有何不同？","chapter":"2589"},{"id":503220,"title":"代码评点02｜什么是合适TDD的语言和IDE？","chapter":"2589"},{"id":502056,"title":"12｜实战中的TDD：RESTful API的开发框架","chapter":"2586"},{"id":502058,"title":"13 ｜DI Container（1）：如何实现基本的DI容器结构？","chapter":"2586"},{"id":502584,"title":"14｜DI Container（2）：如何通过Sad Path为容器增加功能？","chapter":"2586"},{"id":502586,"title":"15｜DI Container（3）：如何重构已有的代码？","chapter":"2586"},{"id":508841,"title":"16｜DI Container（4）：如何实现对循环依赖的处理？","chapter":"2586"},{"id":508843,"title":"17｜DI Container（5）：API接口该怎么设计？","chapter":"2586"},{"id":508859,"title":"18｜DI Container（6）：如何实现循环依赖的检查？","chapter":"2586"},{"id":510489,"title":"19｜DI Container（7）：如何实现Field Injection部分的功能？","chapter":"2586"},{"id":510492,"title":"20｜DI Container（8）：如何实现Method Injection部分的功能？","chapter":"2586"},{"id":510495,"title":"21｜DI Container（9）：怎样重构测试代码？","chapter":"2586"},{"id":510503,"title":"22｜DI Container（10）：怎样将大粒度的测试重构为等效的小粒度测试代码？","chapter":"2586"},{"id":510518,"title":"23｜DI Container（11）：如何对ContainerTest进行文档化改造？","chapter":"2586"},{"id":510535,"title":"24｜DI Container（12）：如何增补功能？","chapter":"2586"},{"id":510556,"title":"25｜DI Container（13）：任务上的遗漏该怎么处理？","chapter":"2586"},{"id":515046,"title":"26｜DI Container（14）：如何重构对Type类型判断的逻辑？","chapter":"2586"},{"id":515047,"title":"27｜DI Container（15）：如何封装类型判断逻辑？","chapter":"2586"},{"id":515048,"title":"28｜DI Container（16）：行为封装会对测试产生什么影响？","chapter":"2586"},{"id":517497,"title":"29｜DI Container（17）：如何重构ContextConfig内部的实现？","chapter":"2586"},{"id":517498,"title":"30｜DI Container（18）：如何增补依赖缺失和循环依赖的测试？","chapter":"2586"},{"id":517500,"title":"31｜DI Container（19）：Qualifier部分的功能要如何完成？","chapter":"2586"},{"id":521309,"title":"32｜DI Container（20）：如何对代码和测试进行重构？","chapter":"2586"},{"id":521319,"title":"33｜DI Container（21）：如何处理Singleton生命周期部分的功能？","chapter":"2586"},{"id":521323,"title":"34｜DI Container（22）：如何对Bind的逻辑进行重构？","chapter":"2586"},{"id":522342,"title":"35｜DI Container（23）：项目回顾与总结","chapter":"2586"},{"id":522343,"title":"36｜实战中的TDD：RESTful Web Services","chapter":"2643"},{"id":522346,"title":"37｜RESTful Web Services（1）：明确架构愿景与架构组件间的交互","chapter":"2643"},{"id":494571,"title":"开篇词｜为什么TDD是当前最具工程效能的研发流程？","chapter":"2565"},{"id":495506,"title":"课前必读｜20年前的“老古董”技术，为什么还值得开个课？","chapter":"2565"},{"id":494207,"title":"01｜TDD演示（1）：任务分解法与整体工作流程","chapter":"2566"},{"id":494212,"title":"02｜TDD演示（2）：识别坏味道与代码重构","chapter":"2566"},{"id":494597,"title":"03｜TDD演示（3）：按测试策略重组测试","chapter":"2566"},{"id":494604,"title":"04｜TDD演示（4）：实现对于列表参数的支持","chapter":"2566"},{"id":496697,"title":"05｜TDD中的测试（1）：状态验证为什么是主要的使用方式？","chapter":"2566"},{"id":496698,"title":"06｜TDD中的测试（2）：行为验证为什么应该尽量避免使用？","chapter":"2566"},{"id":496699,"title":"07｜TDD中的测试（3）：集成测试还是单元测试？","chapter":"2566"},{"id":496700,"title":"08｜TDD中的驱动（1）：驱动的极限是什么？","chapter":"2566"},{"id":496701,"title":"09｜TDD中的驱动（2）：重构发挥了什么作用？","chapter":"2566"},{"id":496702,"title":"10｜TDD中的驱动（3）：何为经典学派？何为伦敦学派？","chapter":"2566"},{"id":496703,"title":"11｜作为工程化方法的TDD：更低的成本与更高的效能","chapter":"2566"},{"id":503219,"title":"代码评点01｜不同语言TDD的节奏有何不同？","chapter":"2589"},{"id":503220,"title":"代码评点02｜什么是合适TDD的语言和IDE？","chapter":"2589"},{"id":502056,"title":"12｜实战中的TDD：RESTful API的开发框架","chapter":"2586"},{"id":502058,"title":"13 ｜DI Container（1）：如何实现基本的DI容器结构？","chapter":"2586"},{"id":502584,"title":"14｜DI Container（2）：如何通过Sad Path为容器增加功能？","chapter":"2586"},{"id":502586,"title":"15｜DI Container（3）：如何重构已有的代码？","chapter":"2586"},{"id":508841,"title":"16｜DI Container（4）：如何实现对循环依赖的处理？","chapter":"2586"},{"id":508843,"title":"17｜DI Container（5）：API接口该怎么设计？","chapter":"2586"},{"id":508859,"title":"18｜DI Container（6）：如何实现循环依赖的检查？","chapter":"2586"},{"id":510489,"title":"19｜DI Container（7）：如何实现Field Injection部分的功能？","chapter":"2586"},{"id":510492,"title":"20｜DI Container（8）：如何实现Method Injection部分的功能？","chapter":"2586"},{"id":510495,"title":"21｜DI Container（9）：怎样重构测试代码？","chapter":"2586"},{"id":510503,"title":"22｜DI Container（10）：怎样将大粒度的测试重构为等效的小粒度测试代码？","chapter":"2586"},{"id":510518,"title":"23｜DI Container（11）：如何对ContainerTest进行文档化改造？","chapter":"2586"},{"id":510535,"title":"24｜DI Container（12）：如何增补功能？","chapter":"2586"},{"id":510556,"title":"25｜DI Container（13）：任务上的遗漏该怎么处理？","chapter":"2586"},{"id":515046,"title":"26｜DI Container（14）：如何重构对Type类型判断的逻辑？","chapter":"2586"},{"id":515047,"title":"27｜DI Container（15）：如何封装类型判断逻辑？","chapter":"2586"},{"id":515048,"title":"28｜DI Container（16）：行为封装会对测试产生什么影响？","chapter":"2586"},{"id":517497,"title":"29｜DI Container（17）：如何重构ContextConfig内部的实现？","chapter":"2586"},{"id":517498,"title":"30｜DI Container（18）：如何增补依赖缺失和循环依赖的测试？","chapter":"2586"},{"id":517500,"title":"31｜DI Container（19）：Qualifier部分的功能要如何完成？","chapter":"2586"},{"id":521309,"title":"32｜DI Container（20）：如何对代码和测试进行重构？","chapter":"2586"},{"id":521319,"title":"33｜DI Container（21）：如何处理Singleton生命周期部分的功能？","chapter":"2586"},{"id":521323,"title":"34｜DI Container（22）：如何对Bind的逻辑进行重构？","chapter":"2586"},{"id":522342,"title":"35｜DI Container（23）：项目回顾与总结","chapter":"2586"},{"id":522343,"title":"36｜实战中的TDD：RESTful Web Services","chapter":"2643"},{"id":522346,"title":"37｜RESTful Web Services（1）：明确架构愿景与架构组件间的交互","chapter":"2643"},{"id":494571,"title":"开篇词｜为什么TDD是当前最具工程效能的研发流程？","chapter":"2565"},{"id":495506,"title":"课前必读｜20年前的“老古董”技术，为什么还值得开个课？","chapter":"2565"},{"id":494207,"title":"01｜TDD演示（1）：任务分解法与整体工作流程","chapter":"2566"},{"id":494212,"title":"02｜TDD演示（2）：识别坏味道与代码重构","chapter":"2566"},{"id":494597,"title":"03｜TDD演示（3）：按测试策略重组测试","chapter":"2566"},{"id":494604,"title":"04｜TDD演示（4）：实现对于列表参数的支持","chapter":"2566"},{"id":496697,"title":"05｜TDD中的测试（1）：状态验证为什么是主要的使用方式？","chapter":"2566"},{"id":496698,"title":"06｜TDD中的测试（2）：行为验证为什么应该尽量避免使用？","chapter":"2566"},{"id":496699,"title":"07｜TDD中的测试（3）：集成测试还是单元测试？","chapter":"2566"},{"id":496700,"title":"08｜TDD中的驱动（1）：驱动的极限是什么？","chapter":"2566"},{"id":496701,"title":"09｜TDD中的驱动（2）：重构发挥了什么作用？","chapter":"2566"},{"id":496702,"title":"10｜TDD中的驱动（3）：何为经典学派？何为伦敦学派？","chapter":"2566"},{"id":496703,"title":"11｜作为工程化方法的TDD：更低的成本与更高的效能","chapter":"2566"},{"id":503219,"title":"代码评点01｜不同语言TDD的节奏有何不同？","chapter":"2589"},{"id":503220,"title":"代码评点02｜什么是合适TDD的语言和IDE？","chapter":"2589"},{"id":502056,"title":"12｜实战中的TDD：RESTful API的开发框架","chapter":"2586"},{"id":502058,"title":"13 ｜DI Container（1）：如何实现基本的DI容器结构？","chapter":"2586"},{"id":502584,"title":"14｜DI Container（2）：如何通过Sad Path为容器增加功能？","chapter":"2586"},{"id":502586,"title":"15｜DI Container（3）：如何重构已有的代码？","chapter":"2586"},{"id":508841,"title":"16｜DI Container（4）：如何实现对循环依赖的处理？","chapter":"2586"},{"id":508843,"title":"17｜DI Container（5）：API接口该怎么设计？","chapter":"2586"},{"id":508859,"title":"18｜DI Container（6）：如何实现循环依赖的检查？","chapter":"2586"},{"id":510489,"title":"19｜DI Container（7）：如何实现Field Injection部分的功能？","chapter":"2586"},{"id":510492,"title":"20｜DI Container（8）：如何实现Method Injection部分的功能？","chapter":"2586"},{"id":510495,"title":"21｜DI Container（9）：怎样重构测试代码？","chapter":"2586"},{"id":510503,"title":"22｜DI Container（10）：怎样将大粒度的测试重构为等效的小粒度测试代码？","chapter":"2586"},{"id":510518,"title":"23｜DI Container（11）：如何对ContainerTest进行文档化改造？","chapter":"2586"},{"id":510535,"title":"24｜DI Container（12）：如何增补功能？","chapter":"2586"},{"id":510556,"title":"25｜DI Container（13）：任务上的遗漏该怎么处理？","chapter":"2586"},{"id":515046,"title":"26｜DI Container（14）：如何重构对Type类型判断的逻辑？","chapter":"2586"},{"id":515047,"title":"27｜DI Container（15）：如何封装类型判断逻辑？","chapter":"2586"},{"id":515048,"title":"28｜DI Container（16）：行为封装会对测试产生什么影响？","chapter":"2586"},{"id":517497,"title":"29｜DI Container（17）：如何重构ContextConfig内部的实现？","chapter":"2586"},{"id":517498,"title":"30｜DI Container（18）：如何增补依赖缺失和循环依赖的测试？","chapter":"2586"},{"id":517500,"title":"31｜DI Container（19）：Qualifier部分的功能要如何完成？","chapter":"2586"},{"id":521309,"title":"32｜DI Container（20）：如何对代码和测试进行重构？","chapter":"2586"},{"id":521319,"title":"33｜DI Container（21）：如何处理Singleton生命周期部分的功能？","chapter":"2586"},{"id":521323,"title":"34｜DI Container（22）：如何对Bind的逻辑进行重构？","chapter":"2586"},{"id":522342,"title":"35｜DI Container（23）：项目回顾与总结","chapter":"2586"},{"id":522343,"title":"36｜实战中的TDD：RESTful Web Services","chapter":"2643"},{"id":522346,"title":"37｜RESTful Web Services（1）：明确架构愿景与架构组件间的交互","chapter":"2643"}]}