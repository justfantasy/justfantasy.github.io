{"title":"朱涛 · Kotlin编程第一课","author":"朱涛","cover":"https://static001.geekbang.org/resource/image/ab/68/abf039bb23d8e8749fb8fd1aa516f668.jpg","cid":475,"list":[{"id":472129,"title":"开篇词 | 入门Kotlin有多容易，精通Kotlin就有多难","chapter":"2481"},{"id":472154,"title":"01 | Kotlin基础语法：正式开启学习之旅","chapter":"2482"},{"id":473349,"title":"02 | 面向对象：理解Kotlin设计者的良苦用心","chapter":"2482"},{"id":473529,"title":"03 | Kotlin原理：编译器在幕后干了哪些“好事”？","chapter":"2482"},{"id":473656,"title":"04 | 实战：构建一个Kotlin版本的四则运算计算器","chapter":"2482"},{"id":475058,"title":"05 | object关键字：你到底有多少种用法？","chapter":"2482"},{"id":475684,"title":"06 | 扩展：你的能力边界到底在哪里？","chapter":"2482"},{"id":476637,"title":"07 | 高阶函数：为什么说函数是Kotlin的“一等公民”？","chapter":"2482"},{"id":477295,"title":"08 | 实战：用Kotlin写一个英语词频统计程序","chapter":"2482"},{"id":478106,"title":"加餐一 | 初识Kotlin函数式编程","chapter":"2482"},{"id":479112,"title":"09 | 委托：你为何总是被低估？","chapter":"2482"},{"id":480022,"title":"10 | 泛型：逆变or协变，傻傻分不清？","chapter":"2482"},{"id":481037,"title":"11 | 注解与反射：进阶必备技能","chapter":"2482"},{"id":481787,"title":"12 | 实战：用Kotlin实现一个网络请求框架KtHttp","chapter":"2482"},{"id":482603,"title":"加餐二 | 什么是“表达式思维”？","chapter":"2482"},{"id":484631,"title":"加餐三 | 什么是“不变性思维”？","chapter":"2482"},{"id":484921,"title":"加餐四 | 什么是“空安全思维”？","chapter":"2482"},{"id":482822,"title":"春节刷题计划（一）| 当Kotlin遇上LeetCode","chapter":"2513"},{"id":484149,"title":"春节刷题计划（二）| 一题三解，搞定版本号判断","chapter":"2513"},{"id":484366,"title":"春节刷题计划（三）| 一题双解，搞定求解方程","chapter":"2513"},{"id":484369,"title":"春节刷题计划（四）| 一题三解，搞定分式加减法","chapter":"2513"},{"id":485632,"title":"13 | 什么是“协程思维模型”？","chapter":"2533"},{"id":486305,"title":"14 | 如何启动协程？","chapter":"2533"},{"id":487085,"title":"15 | 挂起函数：Kotlin协程的核心","chapter":"2533"},{"id":487930,"title":"16 | Job：协程也有生命周期吗？","chapter":"2533"},{"id":488571,"title":"17 | Context：万物皆为Context？","chapter":"2533"},{"id":488985,"title":"18 | 实战：让KtHttp支持挂起函数","chapter":"2533"},{"id":489708,"title":"期中考试 | 用Kotlin实现图片处理程序","chapter":"2533"},{"id":490408,"title":"题目解答 | 期中考试版本参考实现","chapter":"2533"},{"id":491021,"title":"19 | Channel：为什么说Channel是“热”的？","chapter":"2533"},{"id":491632,"title":"20 | Flow：为什么说Flow是“冷”的？","chapter":"2533"},{"id":492405,"title":"21 | select：到底是在选择什么？","chapter":"2533"},{"id":493069,"title":"22 | 并发：协程不需要处理同步吗？","chapter":"2533"},{"id":493666,"title":"23 | 异常：try-catch居然会不起作用？坑！","chapter":"2533"},{"id":494526,"title":"24 | 实战：让KtHttp支持Flow","chapter":"2533"},{"id":498437,"title":"答疑（一）| Java和Kotlin到底谁好谁坏？","chapter":"2576"},{"id":495246,"title":"25 | 集合操作符：你也会“看完就忘”吗？","chapter":"2562"},{"id":495862,"title":"26 | 协程源码的地图：如何读源码才不会迷失？","chapter":"2562"},{"id":496883,"title":"27 | 图解挂起函数：原来你就是个状态机？","chapter":"2562"},{"id":497868,"title":"加餐五 | 深入理解协程基础元素","chapter":"2562"},{"id":499826,"title":"28 | launch的背后到底发生了什么？","chapter":"2562"},{"id":500420,"title":"29 | Dispatchers是如何工作的？","chapter":"2562"},{"id":501702,"title":"30 | CoroutineScope是如何管理协程的？","chapter":"2562"},{"id":502085,"title":"31 | 图解Channel：如何理解它的CSP通信模型？","chapter":"2562"},{"id":503629,"title":"32 | 图解Flow：原来你是只纸老虎？","chapter":"2562"},{"id":504379,"title":"33 | Java Android开发者还会有未来吗？","chapter":"2593"},{"id":505790,"title":"34 | Kotlin与Jetpack简直是天生一对！","chapter":"2593"},{"id":506682,"title":"35 | 用Kotlin写一个GitHub Trending App","chapter":"2593"},{"id":507617,"title":"结课测试 | “Kotlin编程第一课”100分试卷等你来挑战！","chapter":"2616"},{"id":508768,"title":"结束语 | 不忘初心","chapter":"2616"},{"id":472129,"title":"开篇词 | 入门Kotlin有多容易，精通Kotlin就有多难","chapter":"2481"},{"id":472154,"title":"01 | Kotlin基础语法：正式开启学习之旅","chapter":"2482"},{"id":473349,"title":"02 | 面向对象：理解Kotlin设计者的良苦用心","chapter":"2482"},{"id":473529,"title":"03 | Kotlin原理：编译器在幕后干了哪些“好事”？","chapter":"2482"},{"id":473656,"title":"04 | 实战：构建一个Kotlin版本的四则运算计算器","chapter":"2482"},{"id":475058,"title":"05 | object关键字：你到底有多少种用法？","chapter":"2482"},{"id":475684,"title":"06 | 扩展：你的能力边界到底在哪里？","chapter":"2482"},{"id":476637,"title":"07 | 高阶函数：为什么说函数是Kotlin的“一等公民”？","chapter":"2482"},{"id":477295,"title":"08 | 实战：用Kotlin写一个英语词频统计程序","chapter":"2482"},{"id":478106,"title":"加餐一 | 初识Kotlin函数式编程","chapter":"2482"},{"id":479112,"title":"09 | 委托：你为何总是被低估？","chapter":"2482"},{"id":480022,"title":"10 | 泛型：逆变or协变，傻傻分不清？","chapter":"2482"},{"id":481037,"title":"11 | 注解与反射：进阶必备技能","chapter":"2482"},{"id":481787,"title":"12 | 实战：用Kotlin实现一个网络请求框架KtHttp","chapter":"2482"},{"id":482603,"title":"加餐二 | 什么是“表达式思维”？","chapter":"2482"},{"id":484631,"title":"加餐三 | 什么是“不变性思维”？","chapter":"2482"},{"id":484921,"title":"加餐四 | 什么是“空安全思维”？","chapter":"2482"},{"id":482822,"title":"春节刷题计划（一）| 当Kotlin遇上LeetCode","chapter":"2513"},{"id":484149,"title":"春节刷题计划（二）| 一题三解，搞定版本号判断","chapter":"2513"},{"id":484366,"title":"春节刷题计划（三）| 一题双解，搞定求解方程","chapter":"2513"},{"id":484369,"title":"春节刷题计划（四）| 一题三解，搞定分式加减法","chapter":"2513"},{"id":485632,"title":"13 | 什么是“协程思维模型”？","chapter":"2533"},{"id":486305,"title":"14 | 如何启动协程？","chapter":"2533"},{"id":487085,"title":"15 | 挂起函数：Kotlin协程的核心","chapter":"2533"},{"id":487930,"title":"16 | Job：协程也有生命周期吗？","chapter":"2533"},{"id":488571,"title":"17 | Context：万物皆为Context？","chapter":"2533"},{"id":488985,"title":"18 | 实战：让KtHttp支持挂起函数","chapter":"2533"},{"id":489708,"title":"期中考试 | 用Kotlin实现图片处理程序","chapter":"2533"},{"id":490408,"title":"题目解答 | 期中考试版本参考实现","chapter":"2533"},{"id":491021,"title":"19 | Channel：为什么说Channel是“热”的？","chapter":"2533"},{"id":491632,"title":"20 | Flow：为什么说Flow是“冷”的？","chapter":"2533"},{"id":492405,"title":"21 | select：到底是在选择什么？","chapter":"2533"},{"id":493069,"title":"22 | 并发：协程不需要处理同步吗？","chapter":"2533"},{"id":493666,"title":"23 | 异常：try-catch居然会不起作用？坑！","chapter":"2533"},{"id":494526,"title":"24 | 实战：让KtHttp支持Flow","chapter":"2533"},{"id":498437,"title":"答疑（一）| Java和Kotlin到底谁好谁坏？","chapter":"2576"},{"id":495246,"title":"25 | 集合操作符：你也会“看完就忘”吗？","chapter":"2562"},{"id":495862,"title":"26 | 协程源码的地图：如何读源码才不会迷失？","chapter":"2562"},{"id":496883,"title":"27 | 图解挂起函数：原来你就是个状态机？","chapter":"2562"},{"id":497868,"title":"加餐五 | 深入理解协程基础元素","chapter":"2562"},{"id":499826,"title":"28 | launch的背后到底发生了什么？","chapter":"2562"},{"id":500420,"title":"29 | Dispatchers是如何工作的？","chapter":"2562"},{"id":501702,"title":"30 | CoroutineScope是如何管理协程的？","chapter":"2562"},{"id":502085,"title":"31 | 图解Channel：如何理解它的CSP通信模型？","chapter":"2562"},{"id":503629,"title":"32 | 图解Flow：原来你是只纸老虎？","chapter":"2562"},{"id":504379,"title":"33 | Java Android开发者还会有未来吗？","chapter":"2593"},{"id":505790,"title":"34 | Kotlin与Jetpack简直是天生一对！","chapter":"2593"},{"id":506682,"title":"35 | 用Kotlin写一个GitHub Trending App","chapter":"2593"},{"id":507617,"title":"结课测试 | “Kotlin编程第一课”100分试卷等你来挑战！","chapter":"2616"},{"id":508768,"title":"结束语 | 不忘初心","chapter":"2616"},{"id":472129,"title":"开篇词 | 入门Kotlin有多容易，精通Kotlin就有多难","chapter":"2481"},{"id":472154,"title":"01 | Kotlin基础语法：正式开启学习之旅","chapter":"2482"},{"id":473349,"title":"02 | 面向对象：理解Kotlin设计者的良苦用心","chapter":"2482"},{"id":473529,"title":"03 | Kotlin原理：编译器在幕后干了哪些“好事”？","chapter":"2482"},{"id":473656,"title":"04 | 实战：构建一个Kotlin版本的四则运算计算器","chapter":"2482"},{"id":475058,"title":"05 | object关键字：你到底有多少种用法？","chapter":"2482"},{"id":475684,"title":"06 | 扩展：你的能力边界到底在哪里？","chapter":"2482"},{"id":476637,"title":"07 | 高阶函数：为什么说函数是Kotlin的“一等公民”？","chapter":"2482"},{"id":477295,"title":"08 | 实战：用Kotlin写一个英语词频统计程序","chapter":"2482"},{"id":478106,"title":"加餐一 | 初识Kotlin函数式编程","chapter":"2482"},{"id":479112,"title":"09 | 委托：你为何总是被低估？","chapter":"2482"},{"id":480022,"title":"10 | 泛型：逆变or协变，傻傻分不清？","chapter":"2482"},{"id":481037,"title":"11 | 注解与反射：进阶必备技能","chapter":"2482"},{"id":481787,"title":"12 | 实战：用Kotlin实现一个网络请求框架KtHttp","chapter":"2482"},{"id":482603,"title":"加餐二 | 什么是“表达式思维”？","chapter":"2482"},{"id":484631,"title":"加餐三 | 什么是“不变性思维”？","chapter":"2482"},{"id":484921,"title":"加餐四 | 什么是“空安全思维”？","chapter":"2482"},{"id":482822,"title":"春节刷题计划（一）| 当Kotlin遇上LeetCode","chapter":"2513"},{"id":484149,"title":"春节刷题计划（二）| 一题三解，搞定版本号判断","chapter":"2513"},{"id":484366,"title":"春节刷题计划（三）| 一题双解，搞定求解方程","chapter":"2513"},{"id":484369,"title":"春节刷题计划（四）| 一题三解，搞定分式加减法","chapter":"2513"},{"id":485632,"title":"13 | 什么是“协程思维模型”？","chapter":"2533"},{"id":486305,"title":"14 | 如何启动协程？","chapter":"2533"},{"id":487085,"title":"15 | 挂起函数：Kotlin协程的核心","chapter":"2533"},{"id":487930,"title":"16 | Job：协程也有生命周期吗？","chapter":"2533"},{"id":488571,"title":"17 | Context：万物皆为Context？","chapter":"2533"},{"id":488985,"title":"18 | 实战：让KtHttp支持挂起函数","chapter":"2533"},{"id":489708,"title":"期中考试 | 用Kotlin实现图片处理程序","chapter":"2533"},{"id":490408,"title":"题目解答 | 期中考试版本参考实现","chapter":"2533"},{"id":491021,"title":"19 | Channel：为什么说Channel是“热”的？","chapter":"2533"},{"id":491632,"title":"20 | Flow：为什么说Flow是“冷”的？","chapter":"2533"},{"id":492405,"title":"21 | select：到底是在选择什么？","chapter":"2533"},{"id":493069,"title":"22 | 并发：协程不需要处理同步吗？","chapter":"2533"},{"id":493666,"title":"23 | 异常：try-catch居然会不起作用？坑！","chapter":"2533"},{"id":494526,"title":"24 | 实战：让KtHttp支持Flow","chapter":"2533"},{"id":498437,"title":"答疑（一）| Java和Kotlin到底谁好谁坏？","chapter":"2576"},{"id":495246,"title":"25 | 集合操作符：你也会“看完就忘”吗？","chapter":"2562"},{"id":495862,"title":"26 | 协程源码的地图：如何读源码才不会迷失？","chapter":"2562"},{"id":496883,"title":"27 | 图解挂起函数：原来你就是个状态机？","chapter":"2562"},{"id":497868,"title":"加餐五 | 深入理解协程基础元素","chapter":"2562"},{"id":499826,"title":"28 | launch的背后到底发生了什么？","chapter":"2562"},{"id":500420,"title":"29 | Dispatchers是如何工作的？","chapter":"2562"},{"id":501702,"title":"30 | CoroutineScope是如何管理协程的？","chapter":"2562"},{"id":502085,"title":"31 | 图解Channel：如何理解它的CSP通信模型？","chapter":"2562"},{"id":503629,"title":"32 | 图解Flow：原来你是只纸老虎？","chapter":"2562"},{"id":504379,"title":"33 | Java Android开发者还会有未来吗？","chapter":"2593"},{"id":505790,"title":"34 | Kotlin与Jetpack简直是天生一对！","chapter":"2593"},{"id":506682,"title":"35 | 用Kotlin写一个GitHub Trending App","chapter":"2593"},{"id":507617,"title":"结课测试 | “Kotlin编程第一课”100分试卷等你来挑战！","chapter":"2616"},{"id":508768,"title":"结束语 | 不忘初心","chapter":"2616"}]}